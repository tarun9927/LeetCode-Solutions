class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        n=len(prices)
        if n<=1: return 0
        if n==2:
            if prices[0]<prices[1]: return prices[1]-prices[0]
            return 0
        have,not_have=[0 for i in range(n)],[0 for i in range(n)]
        not_have[0]=0
        have[0]=-prices[0]
        have[1]=max(have[0],not_have[0]-prices[1])
        not_have[1]=max(have[0]+prices[1],not_have[0])
        for i in range(2,n):
            not_have[i]=max(not_have[i-1],have[i-1]+prices[i])
            have[i]=max(not_have[i-2]-prices[i],have[i-1])
        #print(have,not_have)
        return max(have[-1],not_have[-1])
