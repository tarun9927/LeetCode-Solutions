# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Codec:

    def serialize(self, root: TreeNode) -> str:
        if not root:
            return "X"
        l,r=self.serialize(root.left),self.serialize(root.right)
        return str(root.val)+","+l+","+r
        

    def deserialize(self, data: str) -> TreeNode:
        def traverse(data):
            curr=data.pop(0)
            if curr=="X": return None
            curr=TreeNode(int(curr))
            curr.left=traverse(data)
            curr.right=traverse(data)
            return curr
        return traverse(data.split(","))
        

# Your Codec object will be instantiated and called as such:
# codec = Codec()
# codec.deserialize(codec.serialize(root))
