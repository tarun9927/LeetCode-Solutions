# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class BSTIterator:

    def __init__(self, root: TreeNode):
        self.stack=[]
        self.fill(root)
        
    def fill(self,node):
        while node:
            self.stack.append(node)
            node=node.left

    def next(self) -> int:
        toreturn=self.stack.pop()
        self.fill(toreturn.right)
        return toreturn.val
        

    def hasNext(self) -> bool:
        return not not self.stack
        


# Your BSTIterator object will be instantiated and called as such:
# obj = BSTIterator(root)
# param_1 = obj.next()
# param_2 = obj.hasNext()
