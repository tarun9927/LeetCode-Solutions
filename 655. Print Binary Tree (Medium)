# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def printTree(self, root: TreeNode) -> List[List[str]]:
        def find_height(node):
            if node: return 1+max(find_height(node.left),find_height(node.right))
            return 0
        def set_values(root,height,left,right):
            if root:
                mid=(left+right)//2
                ans[height][mid]=str(root.val)
                set_values(root.left,height+1,left,mid-1)
                set_values(root.right,height+1,mid+1,right)
        height=find_height(root)
        width=(2**height)-1
        ans=[["" for _ in range(width)] for _ in range(height)]
        set_values(root,0,0,width-1)
        return ans
