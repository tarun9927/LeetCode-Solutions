class Solution:
    def possibleBipartition(self, N: int, dislikes: List[List[int]]) -> bool:
        graph,color=collections.defaultdict(set),{i:-1 for i in range(1,N+1)}
        for u,v in dislikes:
            graph[u].add(v)
            graph[v].add(u)
        def bfs(u):
            color[u]=True
            queue=[u]
            while queue:
                u=queue.pop(0)
                for v in graph[u]:
                    if color[u]==color[v]: return False
                    if color[v]==-1 and color[u]!=color[v]:
                        color[v]=not color[u]
                        queue.append(v)
            return True
        for i in range(1,N+1):
            if color[i]==-1 and not bfs(i):
                return False
        return True
