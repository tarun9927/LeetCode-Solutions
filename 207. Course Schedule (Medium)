class Solution:
    def canFinish(self, numCourses: int, prerequisites: List[List[int]]) -> bool:
        graph={i:[] for i in range(numCourses)}
        indegree={i:0 for i in range(numCourses)}
        for conn in prerequisites:
            graph[conn[1]].append(conn[0])
            indegree[conn[0]]+=1
        queue,count=[i for i in indegree.keys() if indegree[i]==0],0
        if not queue: return False
        while queue:
            u=queue.pop(0)
            if indegree[u]==0:
                count+=1
            for v in graph[u]:
                indegree[v]-=1
                if indegree[v]==0:
                    queue.append(v)
        return count==numCourses
