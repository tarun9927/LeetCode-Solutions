"""
# Definition for a Node.
class Node:
    def __init__(self, val = 0, neighbors = None):
        self.val = val
        self.neighbors = neighbors if neighbors is not None else []
"""

class Solution:
    def cloneGraph(self, node: 'Node') -> 'Node':
        if not node: return None
        queue,ans,seen=[node],None,{}
        ans=seen[node]=Node(node.val)
        while queue:
            u=queue.pop(0)
            for v in u.neighbors:
                if v not in seen:
                    seen[v]=Node(v.val)
                    queue.append(v)
                seen[u].neighbors.append(seen[v])
        return ans
