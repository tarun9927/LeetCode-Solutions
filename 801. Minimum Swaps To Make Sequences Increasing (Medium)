class Solution:
    def minSwap(self, A: List[int], B: List[int]) -> int:
        seen,n={},len(A)
        def find_min(i,A,B,swapped):
            if (i,swapped) in seen:
                return seen[i,swapped]
            if i==n:
                return 0
            temp=float("inf")
            if i==0 or (A[i-1]<A[i] and B[i-1]<B[i]):
                temp=min(temp,find_min(i+1,A,B,False))
            if i==0 or (A[i-1]<B[i] and B[i-1]<A[i]):
                A[i],B[i]=B[i],A[i]
                temp=min(temp,find_min(i+1,A,B,True)+1)
                A[i],B[i]=B[i],A[i]
            seen[i,swapped]=temp
            return temp
        return find_min(0,A,B,False)
