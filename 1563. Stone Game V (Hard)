class Solution:
    def stoneGameV(self, stoneValue: List[int]) -> int:
        def find_max(nums):
            if len(nums)<=1:
                return 0
            key=tuple(nums)
            if key in seen:
                return seen[key]
            summ=sum(nums)
            sums=[nums[0]]
            for i in range(1,len(nums)):sums.append(sums[i-1]+nums[i])
            temp=float("-inf")
            for i in range(len(sums)-1):
                if sums[i]>summ-sums[i]:
                    temp=max(temp,find_max(nums[i+1:])+(summ-sums[i]))
                elif sums[i]<summ-sums[i]:
                    temp=max(temp,find_max(nums[:i+1])+sums[i])
                else:
                    temp=max(temp,find_max(nums[:i+1])+sums[i],find_max(nums[i+1:])+(summ-sums[i]))
            seen[key]=temp
            return temp
        seen={}
        return find_max(stoneValue)
