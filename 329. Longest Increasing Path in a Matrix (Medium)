class Solution:
    def longestIncreasingPath(self, matrix: List[List[int]]) -> int:
        if not matrix: return 0
        n,m,ans=len(matrix),len(matrix[0]),0
        visited=[[-1 for _ in range(m)] for _ in range(n)]
        def dfs(i,j):
            if visited[i][j]!=-1:
                return visited[i][j]
            res=1
            for x,y in [[1,0],[-1,0],[0,1],[0,-1]]:
                ni,nj=i+x,j+y
                if 0<=ni<n and 0<=nj<m and matrix[ni][nj]>matrix[i][j]:
                    res=max(res,1+dfs(ni,nj))
            visited[i][j]=res
            return res
        for i in range(n):
            for j in range(m):
                ans=max(ans,dfs(i,j))
        return ans
