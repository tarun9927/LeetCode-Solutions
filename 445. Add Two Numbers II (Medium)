# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def addTwoNumbers(self, l1: ListNode, l2: ListNode) -> ListNode:
        s_l1,s_l2=[],[]
        while l1:
            s_l1.append(l1)
            l1=l1.next
        while l2:
            s_l2.append(l2)
            l2=l2.next
        if len(s_l2)>len(s_l1): s_l1,s_l2=s_l2,s_l1
        carry=0
        while s_l1 and s_l2:
            l1_num,l2_num=s_l1.pop(),s_l2.pop()
            summ=l1_num.val+l2_num.val+carry
            if summ>=10:
                l1_num.val=summ%10
                carry=summ//10
            else:
                l1_num.val=summ
                carry=0
        while s_l1:
            l1_num=s_l1.pop()
            summ=l1_num.val+carry
            if summ>=10:
                l1_num.val=summ%10
                carry=summ//10
            else:
                l1_num.val=summ
                carry=0
        if carry:
            ans=ListNode(carry)
            ans.next=l1_num
            l1_num=ans
        return l1_num
